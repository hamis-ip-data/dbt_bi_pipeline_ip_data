{{
    config(
        materialized="table",
        labels={"type": "datorama_data", "clients": "gae", "category": "analysis"},
    )
}}

select
    'one_dimension' as one_dimension,
    cast(campaign_name as string) as campaign_name,
    split(cast(campaign_name as string), '-')[safe_offset(0)] as cp_advertiser,
    split(cast(campaign_name as string), '-')[safe_offset(1)] as cp_campaign,
    split(cast(campaign_name as string), '-')[safe_offset(2)] as cp_type,
    split(cast(campaign_name as string), '-')[safe_offset(3)] as cp_year,
    split(cast(campaign_name as string), '-')[safe_offset(4)] as cp_date,
    site_name,
    nom_format_h,
    ciblage,
    device,
    -- Handling Data Stream information 
    data_stream,
    split(data_stream, '-')[safe_offset(0)] as advertiser,
    split(data_stream, '-')[safe_offset(1)] as account,
    data_stream_type,
    data_stream_status,
    data_stream_source_name,
    data_stream_last_updated_by,
    cast(data_stream_last_updated_date as date) as data_stream_last_updated_date,
    data_stream_last_run_status,
    cast(data_stream_last_data_date as date) as data_stream_last_data_date,
    cast(data_stream_last_run_date as date) as data_stream_last_run_date,
    cast(data_stream_created_date as date) as data_stream_created_date,
    data_stream_created_by,
    conversion_tag_key,
    conversion_tag_name,
    media_buy_key,
    media_buy_name,
    split(media_buy_name, '-')[safe_offset(0)] as media_buy_name_0,
    split(media_buy_name, '-')[safe_offset(1)] as media_buy_name_1,
    split(media_buy_name, '-')[safe_offset(2)] as media_buy_name_2,
    split(media_buy_name, '-')[safe_offset(3)] as format,
    split(media_buy_name, '-')[safe_offset(6)] as device_final,
    campaign_key,
    campaign_start_date,
    campaign_type,
    campaign_status,
    site_key,
    concat(campaign_key, '_', site_key, '_', media_buy_key) as info_key,
    cast(media_buy_io_number as float64) as budget_alloue,
    cast(day as date) as date,
    cast(impressions as float64) as impressions,
    cast(impressions_regie as float64) as impressions_regie,
    cast(clicks as float64) as clicks,
    cast(total_conversions as float64) as total_conversions,
    cast(media_cost as float64) as media_cost,
    cast(media_cost_original as float64) as media_cost_original,
    cast(media_cost_fld as float64) as media_cost_fld,
    cast(media_cost_rtb as float64) as media_cost_rtb,
    cast(video_completions_25_nh as float64) as video_completions_25_nh,
    cast(video_completions_50_nh as float64) as video_completions_50_nh,
    cast(video_completions_75_nh as float64) as video_completions_75_nh,
    cast(video_fully_played_nh as float64) as video_fully_played_nh,
    cast(video_plays_nh as float64) as video_plays_nh,
    cast(video_views as float64) as video_views,
    cast(video_completions_25_h as float64) as video_completions_25_h,
    cast(video_completions_50_h as float64) as video_completions_50_h,
    cast(video_completions_75_h as float64) as video_completions_75_h,
    cast(video_completions_50_1_1 as float64) as video_completions_50_1_1,
    cast(video_playsh as float64) as video_playsh,
    cast(video_plays_1_1 as float64) as video_plays_1_1,
    cast(video_fully_played_1_1 as float64) as video_fully_played_1_1,
    cast(video_completions_75_1_1 as float64) as video_completions_75_1_1,
    cast(video_completions_25_1_1 as float64) as video_completions_25_1_1,
    cast(video_views_1_1 as float64) as video_views_1_1,
    cast(insert_date as date) as insert_date,
    cast(io_media_cost_accumulative as float64) as io_media_cost_accumulative,
    cast(arrivees_pc as float64) as arrivees_pc,
    cast(arrival_pv as float64) as arrival_pv,
    cast(arrival_pcpv as float64) as arrival_pcpv,
    cast(lead_pc as float64) as lead_pc,
    cast(lead_pv as float64) as lead_pv,
    cast(lead_pcpv as float64) as lead_pcpv,
    cast(video_plays as float64) as video_plays,
    cast(video_completion_75_ as float64) video_completion_75_,
    cast(video_completion_50_ as float64) video_completion_50_,
    cast(video_completion_25_ as float64) video_completion_25_,
    cast(video_completion_100_ as float64) video_completion_100_

from {{ source("gae_data", "global_dato_data_gae") }}
